name: Linux Kernel Make

on:
  workflow_dispatch: 

permissions:
  contents: write

jobs:

  Kernel_Build:
   runs-on: Ubuntu-latest
   steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q` || ture
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install bc binutils bison dwarves flex gcc git gnupg2 gzip libelf-dev libncurses5-dev libssl-dev make openssl pahole perl-base rsync tar xz-utils
          sudo -E systemctl daemon-reload
          sudo -E apt autoremove
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"
      
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: true
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true
      
      - name: Check out
        uses: actions/checkout@v4

      - name: Get source code
        run: |
         wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.14.6.tar.xz
         tar -xvf linux-6.14.6.tar.xz

      - name: Generate config file
        run: |
         cd linux-6.14.6
         make defconfig

      - name: Build kernel
        run: |
         make -j$(proc)
         sudo -E make modules_install
         sudo -E make install

      - name: Prepare artifact
        run: |
          mkdir artifact
          cp ./arch/x86_64/boot/bzImage ./artifact
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Image
          path: ./artifact/

      - name: Final checkout
        uses: actions/checkout@4
